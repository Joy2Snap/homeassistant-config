- platform: template
  sensors:
    next_sunset_template:
      value_template: '{{ as_timestamp(states.sun.sun.attributes.next_setting)  | timestamp_custom("%H:%M") }}'

    next_sunrise_template:
      value_template: '{{ as_timestamp(states.sun.sun.attributes.next_rising)  | timestamp_custom("%H:%M") }}'

    incomingcaller_template:
      value_template: "{{ states.sensor.callmonitor.attributes.from_name }}"

    googledns_template:
      value_template: '{% if is_state("binary_sensor.googledns", "on") %} {{ states.binary_sensor.googledns.attributes.round_trip_time_avg }} {% else %}Offline{% endif %}'

    webhost_sensor_template:
      value_template: "{% if is_state('device_tracker.webhost', 'home') %}online{% else %}offline{% endif %}"

    hispc_sensor_template:
      value_template: "{% if is_state('device_tracker.hispc', 'home') %}online{% else %}offline{% endif %}"

    zerosensor01_sensor_template:
      value_template: "{% if is_state('device_tracker.zerosensor01', 'home') %}online{% else %}offline{% endif %}"

    commute_departure_his_template: #sensor.commute_departure_his is a HTTP sensor - only initialized by api call
      value_template: "{% if states.sensor.commute_departure_his is defined %} {{ states.sensor.commute_departure_his.state }} Uhr {% else %}Unbekannt{% endif %}"

    commute_delay_his_template: #sensor.commute_delayto_his & sensor.commute_delayto_his are HTTP sensors - only initialized by api call
      value_template: >-
        {% if states.sensor.commute_delayto_his is defined %}
          Ab: {{ states.sensor.commute_delayto_his.state }} Min., An: {{ states.sensor.commute_delayfrom_his.state }} Min.
        {% else %}
          Unbekannt
        {% endif %}

    commute_timestamp_his_template:
      value_template: "{% if states.sensor.commute_departure_his is defined %} {{ states.sensor.commute_departure_his.last_updated.strftime('%d.%m.%Y %H:%M:%S') }} {% else %}Unbekannt{% endif %}"

    commute_time_her_template: #sensor.commute_time_her is a HTTP sensor - only initialized by api call
      value_template: "{% if states.sensor.commute_time_her is defined %} {{ states.sensor.commute_time_her.state | round(0) }} {% else %}Unbekannt{% endif %}"

    commute_distance_her_template: #sensor.commute_distance_her is a HTTP sensor - only initialized by api call
      value_template: "{% if states.sensor.commute_distance_her is defined %} {{ states.sensor.commute_distance_her.state | round(2) }} {% else %}Unbekannt{% endif %}"

    commute_timestamp_her_template: #sensor.commute_time_her is a HTTP sensor - only initialized by api call
      value_template: "{% if states.sensor.commute_time_her is defined %} {{ states.sensor.commute_time_her.last_updated.strftime('%d.%m.%Y %H:%M:%S') }} {% else %}Unbekannt{% endif %}"

    office_temperature_template: #sensor.office_temperature is a HTTP sensor - only initialized by api call
      value_template: "{% if states.sensor.office_temperature is defined %} {{ states.sensor.office_temperature.state | round(1) }} {% else %}Unbekannt{% endif %}"

    office_humidity_template: #sensor.office_humidity is a HTTP sensor - only initialized by api call
        value_template: "{% if states.sensor.office_humidity is defined %} {{ states.sensor.office_humidity.state | round(1) }} {% else %}Unbekannt{% endif %}"

    netmonitor_downrate_sensor_template:
      unit_of_measurement: 'Mbit/s'
      value_template: "{{ (states.sensor.netmonitor.attributes.max_byte_rate_down * 8 / 1000 / 1000 | float) | round(1) }}"

    netmonitor_uprate_sensor_template:
      unit_of_measurement: 'Mbit/s'
      value_template: "{{ (states.sensor.netmonitor.attributes.max_byte_rate_up * 8 / 1000 / 1000 | float) | round(1) }}"

    netmonitor_downrate_current_sensor_template:
      unit_of_measurement: 'Mbit/s'
      value_template: "{{ (states.sensor.netmonitor.attributes.transmission_rate_down * 8 / 1000 / 1000 | float) | round(1) }}"

    gasstation_1_e5_template:
      friendly_name: 'Agip'
      unit_of_measurement: '€'
      value_template: '{{ states.sensor.fuel.attributes["prices"]["29e4d593-c5b6-49eb-a23d-53a1668a18c3"]["e5"]}}'

    gasstation_2_e5_template:
      friendly_name: 'Aral'
      unit_of_measurement: '€'
      value_template: '{{ states.sensor.fuel.attributes["prices"]["d269fdfc-1ec1-429e-8101-9406a818ba7c"]["e5"]}}'

    gasstation_3_e5_template:
      friendly_name: 'BK'
      unit_of_measurement: '€'
      value_template: '{{ states.sensor.fuel.attributes["prices"]["40c6c30f-5150-4272-bd65-5731750edd0f"]["e5"]}}'

    gasstation_4_e5_template:
      friendly_name: 'Allguth'
      unit_of_measurement: '€'
      value_template: '{{ states.sensor.fuel.attributes["prices"]["15e3172e-6b83-4558-90c8-f59ea7c58142"]["e5"]}}'

    gasstation_5_e5_template:
      friendly_name: 'Bavaria Petrol'
      unit_of_measurement: '€'
      value_template: '{{ states.sensor.fuel.attributes["prices"]["d2838dea-4fb1-4e48-991d-c9ad89646e40"]["e5"]}}'
